(ns homepage.pricing.index
  (:require
    [homepage.layout
     :refer [secondary-header contact-us-btn]
     :as layout])
  (:require-macros
    [config :refer
     [appboard-url appbuilder-url hs-contact-us-id hs-portal-id]]))

(def page-header {:header "Pricing"})

(defn appboard-registration-link [arg] (str (appboard-url) "/?package="(name arg)
                                            "&returnUri=" (appbuilder-url)
                                            "#!/registration/"))

(def features-list
  [{:label "Number of apps"
    :description nil
    :highlighted true
    :free (h3 :class "ui huge header"
              "Up to " (b "7 ")"apps")
    :paid (h3 :class "ui huge header"
              "More than " (b "8 ")"apps"
              (div :class"sub header"
                   (b "US$ 100 ")"per app/month"
                   (br)
                   (b "US$ 1000 ")"per app/year"))}

   {:label "AppStore Analytics"
    :description "Automatically pull your metrics from the appstores.e.g. downloads, uninstalls, updates etc."
    :free true :paid true }
   {:label "In-app Analytics"
    :description "Track user metrics from within your apps, regardless of your provider. e.g. sessions, session length, etc."
    :free true :paid true }
   {:label "AppLocker"
    :description "Store your app assets securely. e.g. images, text, licenses, contracts, APK files, etc."
    :free true :paid true }
   {:label "Leaderboards"
    :description "Your apps within your portfolio ranked and compared."
    :free true :paid true }
   {:label "Watchlist"
    :description "Create lists of apps you want to follow, to track your competitors or for inspiration."
    :free true :paid true }
   {:label "AppBuilder"
    :description "A matchmaking tool to find the best development house for your next mobile app."
    :free true :paid true }])

(defn value-add-cta-button [cta]
  (let [btn
        (fn [label href flag]
          (div :class "ui container"
               (a :class "ui blue fluid button"
                  :href href
                  :text label)
               (when (= flag :info)
                 (p (i "*We'll display your snapshots in the AppBoard,"
                       " even if you don't have an app.")))))]
    (case cta
      :insights (btn "Sign up inside the AppBoard"
                     (appboard-registration-link :competitor-insights) :info)
      :distribution (btn "Sign up inside the AppBoard"
                         (appboard-registration-link :distribution) nil)
      :developer (contact-us-btn :css-class "blue fluid")
      :management (contact-us-btn :css-class "blue fluid")
      :inception (contact-us-btn :css-class "blue fluid"))))

(def value-adds
  [{:label "Competitive Insights"
    :description "Get snapshots of key competitor app data by brand (globally or by country)."
    :price1 (h2 :class "ui medium header" "US$ 200 / Snapshot" (br) "US$ 2,000 / Year")
    :cta (value-add-cta-button :insights)}
   {:label "App Distribution"
    :description "Increase downloads by up to 200% by distributing onto additional Android stores."
    :price1 (h2 :class "ui medium header"
                (div :class "sub header" "Distribute to China appstores")
                "10 Stores / US$ 7,000" (br) "20 Stores / US$ 10,000")
    :cta (value-add-cta-button :distribution)}
   {:label "Assisted AppBuilder"
    :description "Help you through developer jargon."
    :price1 (h2 :class "ui medium header" "US$ 999")
    :cta (value-add-cta-button :developer)}
   {:label "App Ideation Workshop"
    :description "Focus on features and priorities for your app, to estimate cost and timing while reducing risk."
    :price1 ""
    :cta (value-add-cta-button :inception)}
   {:label "Project Management"
    :description "You don't even have to learn developer jargon. We'll make sure your project is delivered for you."
    :price1 ""
    :cta (value-add-cta-button :management)}])

(defn feature-row [f]
  (cell-let [{:keys [label description highlighted free paid]} f]
            (let [print-check? (fn [plan color]
                                 (if (true? plan)
                                   (i :class (str color " check circle icon")
                                      :style "font-size: 3em"
                                      :toggle plan)
                                   plan))
                  bg-color (cell= (if highlighted "inverted secondary vertically-centered" "tertiary"))
                  txt-color (cell= (if highlighted "" "grey"))]
              (div :class "three column row" :style "padding:0.10em"
                   (div :class "column"
                        (div :class (cell= (str "ui basic " bg-color " segment"))
                             (h3 :class (cell= (str"ui " txt-color " large header"))
                                 (span label)
                                 (div :class "sub header"
                                      :text description))))
                   (div :class "centered-content column dotted-left-frame"
                        (cell= (print-check? free "blue")))
                   (div :class "centered-content column dotted-right-frame"
                        (cell= (print-check? paid "teal")))))))

(defn feature-row-mobile [feature]
  (cell-let
    [{:keys [label description free paid]} feature]
    (div :class "three column row" :style "padding:0.10em"
         (div :class "twelve wide column"
              (div :class "ui basic tertiary segment"
                   (h3 :class "ui medium header"
                       (span label)
                       (div :class "sub header"
                            :text description))))
         (div :class "two wide centered-content dotted-left-frame column "
              (i :class "check circle blue large icon"))
         (div :class "two wide centered-content dotted-right-frame column"
              (i :class "check circle teal large icon")))))

(defn pricing-section []
  (section
    :id "pricing"
    :class "ui computer only container grid"
    (div :class "three column row"
         (div :class "column")
         (div :class "blue center aligned column"
              :style "margin-left: -0.8em"
              (h2 :class "ui inverted header" "Free"))
         (div :class "teal center aligned column"
              (h2 :class "ui inverted header" "Paid")))
    (loop-tpl :bindings [f features-list]
              (feature-row f))))

(defn pricing-section-mobile []
  (let [[head & features] features-list]
    (section
      :id "pricing"
      :class "ui mobile tablet only container grid"
      (div :class "two column row"
           (div :class "blue centered-content column"
                (h3 :class "ui inverted huge center aligned header" "Free"
                    (div :class "sub header" "Up to 7 apps")))
           (div :class "teal centered-content column"
                (h3 :class "ui inverted huge center aligned header" "Paid"
                    (div :class "sub header"
                         "US$ 100 per app/month"
                         (br)
                         "US$ 1000 per app/year"))))
      (div :class "ui hidden divider")
      (div :class "three column row"
           :style "padding: 0.10em"
           (div :class "twelve wide column"
                (div :class "ui secondary basic segment"
                     (h3 :class "ui medium header"
                         "Features")))
           (div :class "two wide centered-content column"
                :style "background-color: rgba(0,0,0,0.05);
                       margin-left: -0.8em;"
                       (h3 :class "ui medium blue header"
                           "Free"))
           (div :class "two wide centered-content column"
                :style "background-color: rgba(0,0,0,0.05)"
                (h3 :class "ui medium teal header"
                    "Paid")))
      (loop-tpl :bindings [f features]
                (feature-row-mobile f)))))

(defelem signup-btn [{:keys [plan] :as attrs} _]
  ((a (dissoc attrs :plan))
   :href (appboard-registration-link plan)
   "Sign up now"))

(defn cta-section []
  (section
    :class "ui container grid"
    (div :class "three column computer only row"
         (div :class "column")
         (div :class "center aligned column"
              :style "margin-left: -0.8em"
              (signup-btn :class "ui blue huge button" :plan :free))
         (div :class "center aligned column"
              (signup-btn :class "ui teal huge button" :plan :paid)))

    (div :class "one column tablet mobile only row"
         (div :class "center aligned column"
              :style "margin-left: -0.8em"
              (signup-btn :class "ui blue large button" :plan :free)
              (signup-btn :class "ui teal large button" :plan :paid)))))

(defn value-add-row [value-add]
  (cell-let
    [{:keys [label description price1 cta]} value-add]
    (div :class "three column row"
         :style "padding:0.10em"
         (div :class "column"
              (div :class "ui basic tertiary segment"
                   (h3 :class "ui grey large header"
                       (span label)
                       (div :class "sub header" description))))
         (div :class "centered-content column dotted-left-frame" price1)
         (div :class "centered-content column dotted-right-frame" cta))))

(defn value-add-section []
  (section :class "ui stackable container grid"
           (div :class "one column row"
                :style "padding:0.10em"
                (div :class "column"
                     (div :class "ui secondary basic segment"
                          (h3 :class "ui large header"
                              "Additional Services"))))
           (loop-tpl :bindings [value value-adds]
                     (value-add-row value))))

(defn pg []
  (layout/primary
    :id "pricing"
    :page-title "Product Pricing | Analytics & App Management | Exicon"
    :description "Pricing For Exicon's App Management & Logistics Platform That Scales With Your App Portfolio, Analytics, Distribution & API Management."
    :keywords "AppBoard, Analytics, App Management, Exicon Pricing, AppBoard Subscription, Mobile Relationship Management Pricing, Mobile Relationship Management Subscription "
    :page-css "../../pricing/index.inc.css"

    (secondary-header :header (:header page-header))
    (div :class "ui hidden divider")
    (pricing-section)
    (pricing-section-mobile)
    (cta-section)
    (div :class "ui hidden divider")
    (div :class "ui hidden divider")
    (value-add-section)
    (div :class "ui hidden divider")))
