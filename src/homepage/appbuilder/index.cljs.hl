(ns homepage.appbuilder.index
  (:require
    [homepage.layout :refer [secondary-header section-header] :as layout]
    [homepage.common :refer [textual-button]])
  (:require-macros [config :refer [appboard-url appbuilder-url]]))

(def appboard-login-link
  (str (appboard-url)"/?package=starter&returnUri="(appbuilder-url)"#!/login/"))

(def appboard-registration-link
  (str (appboard-url)"/?package=starter&returnUri="(appbuilder-url)"#!/registration/"))

(def app-builder-submission-link
  "/app-idea/#calculate")

(def page-header
  {:header "AppBuilder"
   :sub-header "Matching you with the right mobile app development company"
   :center false})

(def process-list-items
  [
   {:title "Quick, secure and easy"}
   {:title "The right developer for your project"}
   {:title "The support you want"}])

(def section-headers
  {
   :testimonials
   {
    :header "What our customers say"
    :centered true}})

(def flow-items
  [{:serial-number "1"
    :title "Submit your idea"
    :icon "/images/app-builder/lightbulb.svg"
    :cta {:title "Try the App Cost Calculator"
          :link "/app-idea/#calculate"}
    :content ["Secure & Confidential, NDA covered"
              "From notes, sketches or tech specs"]}
   {:serial-number "2"
    :title "Get advice"
    :icon "/images/app-builder/advise.svg"
    :cta {:title "Get 30-minute free consultation"
          :link "/app-idea/#consult"}
    :content ["30-minute free consultation with Exicon mobile experts"
              "Global Projects - small & large"]}
   {:serial-number "3"
    :title "Get matched"
    :icon "/images/app-builder/matching.svg"
    :content ["3 qualified app development companies for you to choose from"
              "Developer match based on budget, location, skills and experience "]}
   {:serial-number "4"
    :title "Launch"
    :icon "/images/app-builder/live.svg"
    :content ["Distribute directly onto multiple appstores"
              "Start promoting your app"]}])

(def qualified-details
  {:name " Qualified"
   :icon "/images/app-builder/qualified-icon.svg"
   :header "Our Network of Development Companies"
   :advantages ["Released and updated mobile software" "Have strong track record in mobililty"
                "Reviewed by experts and customers"]})

(def developers-by-country
  [{:country "USA" :quantity "705"}
   {:country "CHINA" :quantity "400"}
   {:country "INDIA" :quantity "263"}
   {:country "UK" :quantity "187"}
   {:country "GERMANY" :quantity "171"}
   {:country "FRANCE" :quantity "105"}])

(def professional-details
  {:name "Professional"
   :icon "/images/app-builder/professional-icon.svg"
   :header "Experienced in relevant areas"
   :sub-header "Connecting you with..."
   :advantages [{:description "Seniority and type of Contacts" :image "/images/app-builder/seniority.png" }
                {:description "and these skills" :image "/images/app-builder/category.png" }]})

(def incorporated-details
  {:name "Incorporated"
   :icon "/images/app-builder/incorporated-icon.svg"
   :header "Matching your app requirements"
   :image "/images/app-builder/incorporated.png" })

(def reasons-data
  [
   {
    :id :reason1
    :title "1. We have invested in a global network of 3,000+ qualified software development companies."
    :content "We have profiled developers, who are some of the world's leading specialists, to ensure
             our customers get developers who can actually do the job rather than just say they can."}
   {
    :id :reason2
    :title "2. We guarantee you another 3 developers if you arenâ€™t satisfied."
    :content "Among the 10,000 matches, we have yet to be asked to do this. Our customers usually
             have the other problem, being unable to decide between the proposed developers."}
   {
    :id :reason3
    :title "3. Choosing the wrong developer can be a very expensive mistake."
    :content "You may have referrals from others but do your apps have the same complexities? 60%
             of our customers come to us when they have to restart projects due to a mismatch with developers."}
   ])

(def dev-community-items
  [
   {
    :title "Security"
    :icon "/images/app-builder/dev-community-nda.png"
    :content "Secure & Confidential, NDA covered"
    }
   {
    :title "Professional"
    :icon "/images/app-builder/dev-community-professional.png"
    :content "All companies are incorporated and have published code in past 12 months"
    }
   {
    :title "Qualified"
    :icon "/images/app-builder/dev-community-qualified.png"
    :content "All app builders have strong track records and have undergone the Exicon vetting process"
    }
   ])

(def testimonials
  {
   :four-front {
                :image "/images/testimonials/melanie-mcgraw-4front-advisors.png"
                :testimonial "It has been an absolute pleasure to work with this team, consummate professionals
                             through and through. Working with Exicon at the start of this journey was critical
                             in helping us determine what we wanted and needed, then figuring out how to even
                             begin to cast the net into the often confusing digital waters."
                             :name "Melanie McGraw"
                             :sub-title "Corporate Training and Compliance Expert, 4Front Advisors"
                             :company "/images/testimonials/4Front.png"
                             }
   :brain {
           :image "/images/testimonials/Aran-gettoknowyourbrain.png"
           :testimonial "Wow, great service - thanks! Thanks a million! Thanks for your support so far - we're getting close now!"
           :name "Aran Dadswell"
           :sub-title "Founder of Get to know your Brain"
           :company "/images/testimonials/Get-to-know-your-brain.png"}})

(def dev-features
  [
   {
    :img "/images/app-builder/augmented-reality-blue.png"
    :label "Augmented Reality"
    }
   {
    :img "/images/app-builder/commerce-blue.png"
    :label "Commerce"
    }
   {
    :img "/images/app-builder/communication-blue.png"
    :label "Communica\u00adtion"
    }
   {
    :img "/images/app-builder/gamification-blue.png"
    :label "Gamifica\u00adtion"
    }
   {
    :img "/images/app-builder/location-blue.png"
    :label "Location"
    }
   {
    :img "/images/app-builder/newsfeed-blue.png"
    :label "Newsfeed"
    }
   {
    :img "/images/app-builder/ratings-blue.png"
    :label "Ratings"
    }
   {
    :img "/images/app-builder/social-media-blue.png"
    :label "Social Media"
    }
   {
    :img "/images/app-builder/sync-blue.png"
    :label "Synchroni\u00adzation"
    }
   {
    :img "/images/app-builder/coupon.png"
    :label "Coupons"
    }
   {
    :img "/images/app-builder/search-n-discovery.png"
    :label "Search & Discovery"
    }
   {
    :img "/images/app-builder/sensor.png"
    :label "Sensors"
    }])

(defc visible-reasons #{})

(defc show-more #{:brain})

(defelem process-list-item [{:keys [title size]} kids]
  (div :class "item"
       (i :class (str size " checkmark teal icon"))
       (div :class (str size "ui header content") title)))

(defn intro-section []
  (section :id "intro" :class "app-builder"
           (div :class "ui stackable container grid"
                (div :class "row"
                     (div :class "eleven wide column title sizer"
                          (h1 :class "ui huge main header" "AppBuilder"
                              (div :class "sub header"
                                   "Matching you with the right development company"))))
                #_(div :class "row" ; [#98617918]
                       (div :class "six wide left floated computer only column"
                            (a :class "ui huge black fluid button"
                               :href "/appbuilder/" "Watch one of our case studies"))
                       (div :class "seven wide left floated tablet mobile only column"
                            (a :class "ui huge black fluid button"
                               :href "/appbuilder/" "Watch one of our case studies"))))))

(defn flow-item [item]
  (let [cta (:cta @item)]
    (div :class  "column description sizer"
       (img :class"ui small centered inverted image"
            :src (cell= (:icon item)))
       (div :class "ui center aligned container"
            (div :class "center aligned column"
                 (div :class"ui center aligned container"
                      (div :class "ui teal circular label"
                           :text (cell= (:serial-number item))
                           :style "font-size: 0.8em")
                      (h3 :class "ui teal medium header"
                          :text (cell= (:title item)))))
            (when cta
                   (a :class "ui tiny button"
                      :style "margin-top: 2em"
                      :href (:link cta)
                      :text (:title cta))))

       (ul :class "ui bulleted small list"
           (loop-tpl :bindings [item (cell= (:content item))]
                     (li :text (cell= item)))))))

(defn flow-section [flow-items]
  (section :class "ui inverted black vertical segment"
           (div :id "features" :class "anchor" )
           (div :class "ui hidden divider")
           (div :class "ui stackable container grid"
                (div :class "four column row"
                     (loop-tpl :bindings [f flow-items]
                               (flow-item f)))
                (div :class "center aligned row"
                     (div :class "column"
                          (textual-button
                            :inline false
                            :destination-link app-builder-submission-link)))
                (div :class "ui hidden divider"))))

(defn dev-community-column [item]
  (div :class "column"
       (div :class "title sizer"
            (img :class "ui circular centered small inverted teal segment image":src (:icon @item))
            (h2 :class "ui medium header dark-teal" (:title @item)))
       (div :class "content" (:content @item))))

(defn dev-feature [item]
  (div :class "dev-feature center aligned column"
  (div :class "ui circular centered small inverted dev-feature segment"
       (img :class "ui image":src (:img @item)))
       (label (:label @item))))

(defn developer-section []
  (section
    :id "developer-section"
    :class "ui vertically padded stackable container grid"
    (div :class "center aligned row"
         (div :class "title sizer column"
              (h2 :class "ui medium header"
                  (img :src "/images/app-builder/development.png")
                  (div :class "content"
                       "3000 Quality Mobile App Development Companies"
                       (div :class "sub header"
                            "A Network qualified by "
                            (b "Experience, Skills, Price & Location") (br)
                            "US$ 400M worth of projects matched across all industries")))))

    (div :class "ui center aligned container"
         (img :class "ui centered image"
              :src "/images/app-builder/developer-map.png"))

    (div :class "ui doubling stackable two column row"

         (div :class "column"
              (div :class "ui container"
                   (h3 :class"ui header" "Platforms:")
                   (img :class "ui image"
                        :src "/images/app-builder/platforms.png"))
              (div :class "ui hidden divider")

              (div :class "ui three column grid container"
                   (div :class "row"
                        (h3 :class"ui header" "Non-Tech:"))
                   (div :class "five wide column"
                        (div :class "ui circular centered small inverted teal left floated segment"
                             :style "padding: 0.8em"
                             (i :class "paint brush icon")) (div :style "padding-top: 0.8em" "Design"))
                   (div :class "four wide column"
                        (div :class "ui circular centered small inverted teal left floated segment"
                             :style "padding: 0.8em"
                             (b "UX")) (div :style "padding-top: 0.8em" "UX"))
                   (div :class "seven wide column"
                        (div :class "ui circular centered small inverted teal left floated segment"
                             :style "padding: 0.8em"
                             (b "PM")) (div :style "padding-top: 0.8em" "Project Management"))))

         (div :class "column"
              (div :class "row"
                        (h3 :class"ui header" "Features:"))
              (div :class "computer tablet only ui six column container grid"
                   (loop-tpl :bindings [item dev-features]
                             (dev-feature item)))
              (div :class "mobile only ui three column container grid"
                   (loop-tpl :bindings [item dev-features]
                             (dev-feature item)))))

    ; Should point to two new reports, show later
    #_(div :class "ui stackable two column centered row"
         (div :class "six wide column"
              (div :class "ui black fluid large button" "Insource vs. Outsource"))
         (div :class "six wide column"
              (div :class "ui black fluid large button" "Web vs. Native vs. Hybrid")))

    (div :class "ui hidden divider") ))

(defn dev-community []
  (section :id "dev-community"
           (div :class "ui hidden divider")
           (div :class "ui container stackable grid"
                (div :class "center aligned three column row"
                     (loop-tpl :bindings [item dev-community-items]
                               (dev-community-column item)))
                (div :class "ui hidden divider"))))

(defn testimonial-block [testimonial-name]
  (let [testimonial (testimonial-name testimonials)
        testimonial-desc (:testimonial testimonial)
        too-long? (< 141 (count testimonial-desc))
        check-more (fn [] (if (@show-more testimonial-name)
                            (disj @show-more testimonial-name)
                            (conj @show-more testimonial-name)))
        short-desc (if (= :schneider testimonial-name)
                     (str (.substr testimonial-desc 0 60) "...")
                     (str (.substr testimonial-desc 0 95) "..."))]
    [(div :class "column"
          (div :class "ui testimonial segment"
               (if (some identity (map testimonial [:name :image :sub-title]))
                 (div :class "ui header"
                      (if (:image testimonial)
                        (div :class "ui tiny circular image icon"
                             (img :src (cell= (:image testimonial)))))
                      (img :class "ui small right floated image"
                           :src (:company testimonial))
                      (div :class "ui hidden divider")
                      (div :class "middle aligned content"
                           (if (:name testimonial)
                             (span (text (:name testimonial))))
                           (if (:sub-title testimonial)
                             (div :class "sub header"
                                  (text (:sub-title testimonial)))))))
               (p :class "testimonial" :style "display: inline"
                  :text (cell= (if (contains? show-more testimonial-name)
                                 testimonial-desc
                                 short-desc)))
               (a :toggle too-long?
                  :click #(reset! show-more (check-more))
                  (cell= (if (contains? show-more testimonial-name)
                           (label " less " (i :class "caret up icon"))
                           (label " more " (i :class "caret down icon")))))))]))

(defn incorporated-section []
  (section :id "incorporated" :class "feature-details"

            (div :class "ui container grid"
                 (div :class "sixteen wide column title sizer center aligned feature-header"
                      (h2 :class "ui large header"
                          :text (:header incorporated-details)))
                 (div :class "ui hidden divider")
                 (div :class "ui container basic segment"
                      (img :class "ui centered image"
                           :src (:image incorporated-details)))
                 (div :class "ui hidden divider"))))

(defn testimonials-section []
  (section :class "ui basic tertiary segment"
           :style "margin-top: -1em;"
           (section-header (:testimonials section-headers))
           (div :class "ui stackable container grid"
                (div :class "two column row"
                     (testimonial-block :four-front)
                     (testimonial-block :brain)))
           (div :class "ui hidden divider")))

(defn pg []
  (layout/primary
    :page-title "AppBuilder"
    :description "Find the right developer for your app build"
    :keywords "Build an App, AppBuilder"
    :page-css "index.inc.css"

    (secondary-header
      :header (:header page-header)
      :sub-header (:sub-header page-header)
      :page "app-builder"
      :id "intro")
    (flow-section flow-items)
    (developer-section)
    (dev-community)
    (incorporated-section)
    (testimonials-section) ))
