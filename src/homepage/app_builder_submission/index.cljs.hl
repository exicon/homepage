(ns homepage.app-builder-submission.index
      (:require-macros [config :refer [hs-app-calc-id hs-portal-id]])
      (:require
        [homepage.top-nav :refer [route reset-route]]
        [homepage.layout :refer [secondary-header section-header] :as layout]
        [exicon.calculator :refer [cost-calculator]]
        [exicon.app-calculator :refer [app-calculator]]
        [homepage.app-builder.rpc :refer [save-submission submission-state submission-error]]
        [exicon.app-details :refer [form-input nda-terms-conditions warning-message
                                    required-fields target-customers app-details user-details]]))
(def page-header {:header "App Builder Submission"})

(defn app-calc-form []
  (let [opts (clj->js
               {:target "#hs-app-calc-form"
                :css ""
                :cssClass "ui small form segment"
                :submitButtonClass "ui submit teal button"
                :errorMessageClass "ui error message"
                :portalId (hs-portal-id)
                :formId (hs-app-calc-id)})]
    (.setTimeout js/window #(.. js/hbspt -forms (create opts)) 2000)))

(defc= validated? (if (empty? required-fields)
                    true false))

(defc= active-step (case route
                     "#calculator" :calculator
                     "#app-builder" :app-details
                     "#thank-you" :thank-you))



(defelem step [{:keys [id title href]} kids]
  ((a :class "step")
   :class (cell= {:active (= id active-step)})
   :href href
   :click #(reset-route href)
   kids
   (div :class "title"
        :text title)))

(defelem nav-buttons []
  (div :class "ui container grid"
       (div :class "row"
            (div :class "left floated four wide column"
                 :toggle (cell= (= :app-details active-step))
                 (a :class "ui fluid button"
                    :href "#calculator"
                    :click #(reset-route "#calculator")
                    "< Previous"))
            (div :class "right floated four wide column"
                 :toggle (cell= (= :calculator active-step))
                 (a :class "ui fluid button"
                    :href "#app-builder"
                    :click #(reset-route "#app-builder")
                    "Build this app >"))
            (div :class "right floated four wide column"
                 :toggle (cell= (= :app-details active-step))
                 (a :class "ui fluid button"
                    :click #(if @validated?
                              (do
                                (save-submission
                                  @user-details @cost-calculator @app-details)
                                (reset-route "#thank-you")
                                (reset! warning-message false))
                              (reset! warning-message true))
                    :href (cell= (if validated? "#thank-you" "javascript:void(0)"))
                    "Submit")))))

(defelem app-details-form []
  (div :class "ui form segment"
       (nda-terms-conditions)
       (form-input :label-txt "App Name"
                   :object app-details
                   :data :app-name)
       (p "Summarize your app.")
       (p "The more you tell us the better we can match you
          to the right developer.")
       (ul :class "ui bulleted list"
           (li "Key features.")
           (li "Business benefits of the app.")
           (li "Key metrics and success criteria.")
           (li "Customer demographic and size of the opportunity."))

       (form-input :label-txt "Summary"
                   :data :summary
                   :object app-details
                   :type :textarea)

       (div :class "two fields"
            (form-input :label-txt "How much budget do you have for your app development? (USD)"
                        :object app-details
                        :data :development-budget)
            (form-input :label-txt "Estimated launch date - Usually it takes 3 months to build a native app"
                        :object app-details
                        :data :launch-date))

       (target-customers)

       (div :class "field"
            (h2 :class "ui small dividing header" "Registration"))

       (div :class "two fields"
            (form-input
              :label-txt "First name"
              :object user-details
              :data :first-name
              :required true)
            (form-input
              :label-txt "Last name"
              :object user-details
              :data :last-name
              :required true))
       (div :class "two fields"
            (form-input
              :label-txt "Email"
              :object user-details
              :data :email
              :type "email"
              :required true)
            (form-input
              :label-txt "Phone number"
              :object user-details
              :data :phone
              :required true))

       (div :class "two fields"
            (form-input
              :label-txt "Company name"
              :object user-details
              :data :company-name
              :required true)
            (form-input
              :label-txt "Password"
              :object user-details
              :data :password
              :type "password"
              :required true))))

(defn pg []
  (layout/primary
  :page-title "App Builder Submission"
  :description ""
  :keywords ""
  :page-css "/app-calculator/index.inc.css"
  (secondary-header :header (:header page-header)
                    :page "app-builder-submission")

  (div :id "app-builder-submission"
       (div :class "ui hidden divider")

       (div :class "ui container"
            :toggle (cell= (not= :thank-you active-step))
            (div :class "ui two steps"
                 (step :id :calculator :href "#calculator" :title "App Cost Calculator")
                 (step :id :app-details :href "#app-builder" :title "App Builder")))

       (div :class "ui hidden divider")
       (div :toggle (cell= (= :calculator active-step))
            :class "ui container description sizer"
            (a :href "#consultation" "Book a free 30 min consultation")
            (p "Try out our App Cost Calculator to get a range of possible
               costs to build your app")
            (div :class "ui hidden divider"))

       (div :id "app-calculator"
            :toggle (cell= (= :calculator active-step))
            (app-calculator))

       (div :toggle (cell= (= :app-details active-step))
            :class "ui container"
            (app-details-form))

       ((div :class "ui container center aligned basic segment")
            :class (cell= {:loading (and
                                      (= :undefined submission-state)
                                      (nil? submission-error))})
            :style "height:30rem"
            :toggle (cell= (= :thank-you active-step))
            (div :class "ui hidden divider")
            (h2 :toggle (cell= (and (nil? submission-error) (not= :undefined submission-state)))
              :class "ui large header"
                "Thank you for submitting your app proposal"
                (div :class "sub header"
                     "We'll contact you soon!")
                (div :class "ui hidden divider")
                (a :href "/app-builder" "Get to know more about App Builder"))

            (h2 :toggle (cell= submission-error)
              :class "ui large header"
                "Our servers are busy now"
                (div :class "sub header"
                     "Try to submit your request later")
                (div :class "ui hidden divider")
                (a :href "/app-builder" "Get to know more about App Builder"))

            (div :class "ui hidden divider"))

       (div :class "ui hidden divider")
       (nav-buttons)

       (div :class "ui container error message"
            :toggle (cell= warning-message)
            "Please review all the mandatory fields and agree with the Terms & Conditions")

       (div :class "ui hidden divider")

       (div :id "consultation" :class "ui center aligned basic secondary segment description sizer"
            :toggle (cell= (= :calculator active-step))
            (h3 :class "ui medium header"
                "Book your 30-minute FREE App Builder consultation.")
            (div :class "ui hidden divider")
            (div :class "ui container grid"
                 (div :class "eight wide centered left aligned column" :id "hs-app-calc-form"
                      (app-calc-form)))
            (div :class "ui hidden divider"))))
