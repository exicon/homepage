(ns homepage.layout
  (:require-macros [config :refer [inspectlet-wid inspectlet-feature
                                   hs-portal-id hs-newsletter-id]])
  (:require
    [homepage.top-nav :as top-nav]
    [homepage.bottom-nav :as bottom-nav]
    [tailrecursion.hoplon.reload :refer [reload-all]]))


(defn inspect [field details]
  (.push js/__insp
         (clj->js [field details])))

(with-init!
  (when (inspectlet-feature)
    (js/__ldinsp)
    (inspect "wid" (inspectlet-wid))))

(defn row []
  (div
    :class "column sixteen wide center aligned"))
(defc modal-visible? false)

(defelem modal-dialog
  [{:keys [id visible title bg-action]
    :or {title ""}}
   kids]
  (let [hide #(reset! visible false)
        bg-click (if bg-action bg-action hide)]
    [(div :class "modal-bg"
          :do-class (cell= {:show-modal visible})
          :click bg-click )
     (div :class "ui small modal"
          :style "min-heigth:100px"
          :do-class (cell= {:visible visible})
          (div :class "header" title)
          (div :id id :class "content"
               "Loading...")
          kids)]))

(defelem secondary-header
  [{:keys [header sub-header page center id]:or {page "" center true id "page-title"}} kids]
  (section :id id :class (str page " aligned row")
           :do-class {:center center}
           (div :class "column title sizer"
                :do-class {:centered center}
                (h1 :class "ui large header" :text header
                    :do-class {:center center
                               :aligned center})
                (if sub-header
                  (h2 :class "ui small header" :text sub-header
                      :do-class {:center center
                                 :aligned center})))))

(defelem section-header [{:keys [header] :as attr} kids]
  (let [background (:background header)
        inverted (:inverted header)
        size (or (:size header) "small")
        centered (:centered header)
        color (or (:color header) "")]
    (div :class "ui basic segment"
         :do-class {:tertiary background :inverted inverted}
         (div :class "ui title sizer"
              (h2 :class (str "ui header " size " " color)
                  :do-class {:center centered
                             :aligned centered
                             :inverted inverted}
                  (:header header)))
         kids
         (div :class "ui hidden divider"))))

(defn contact-us-modal [active?]
  (div :class "ui modal"
       :do-class (cell= {:active true})
       (i :class "close red icon"
          :click #(reset! active? false))))

(defn subscribe-stick-form [subscribe-click]
  (let [opts (clj->js
               {:target "#hs-form"
                :css ""
                :cssClass "ui small form basic segment"
                :submitButtonClass "ui submit teal button"
                :errorMessageClass "ui error message"
                :portalId (hs-portal-id)
                :formId (hs-newsletter-id)})
        render-form #(.. js/hbspt -forms (create opts))
        trigger-form (cell= (when subscribe-click (render-form)))]

    [(div :id "subscribe-stick-layer"
          :do-class (cell= {:show subscribe-click}))
     (div :id "subscribe-stick-form"
          :class "ui fixed right basic segment"
          :do-class (cell= {:show subscribe-click})
          (i :class "large close icon"
             :click #(reset! subscribe-click false))
          (div :class "ui grid"
               (div :class "sixteen wide center aligned column"
                    (h4 :class "ui header" "Subscribe to our FREE")
                    (p "Newsletter • Reports • Infographs")
                    (div :class "ui divider hidden header")
                    (img :src "/images/header/subscribe.png"))
               (div :class "sixteen wide column"
                    (div :id "hs-form" "Loading ....")
                    #_(form :id "subscribe-form"
                            :action "//exiconglobal.us3.list-manage.com/subscribe/post?u=59165e464834675ada250903e&amp;id=2df8fbeed9"
                            :method "post"
                            :target "_blank"
                            (div :class "ui input basic"
                                 (input :type "text" :name "EMAIL"
                                        :placeholder "email-address"))
                            (div :class "ui divider hidden header")
                            (input :type "submit" :class "ui button tiny"
                                   :value "Subscribe"
                                   :click #(.submit (aget (js/jQuery "#subscribe-form") 0)))))))]))

(defn subscribe-stick-btn [subscribe-click]
  (a :href "javascript:void(0);"
     :click #(reset! subscribe-click true)
     (div :id "subscribe-stick" :do-class
          (cell= {:show (not subscribe-click)}))))

(defelem main
  [{:keys [pagecss page-title description keywords] :as attrs} content]
  (let [subscribe-click (cell false)]
    (html
      (head
        (title page-title)
        (script :type "text/javascript" "window.__insp = window.__insp || [];")
        (script :charset "utf-8"
                :type "text/javascript"
                :src "//js.hsforms.net/forms/v2.js")
        (meta :name "description" :content description)
        (meta :name "keywords" :content keywords)
        (meta :name "viewport" :content "width=device-width, initial-scale=1.0")
        (link :href "/images/favicon.ico" :rel "shortcut icon")
        (if pagecss (link :href pagecss :rel "stylesheet"))
        (script :src "//load.sumome.com/"
                :data-sumo-site-id "ebf284bbaebf222290fb6ad21ded0363d1b94fddbbb9138e7930124b6645bbcb"
                :async))
      (body
        (subscribe-stick-btn subscribe-click)
        (subscribe-stick-form subscribe-click)
        (modal-dialog :visible modal-visible?
                      :id "hs-contact-us"
                      :title "Contact Us")
        (top-nav/top-nav true)
        (top-nav/top-nav false)
        (div (merge {:id "content"}
                    (dissoc attrs :page-title :description :keywords))
             content)
        (bottom-nav/bottom-nav)))))))
